?melt
cars2 <- melt(cars2, id=c("carname", "gears", "cyl"), measure.vars=C("mpg", "hp"))
cars2 <- melt(cars2, id=c("carname", "gears", "cyl"), measure.vars=C("mpg", "hp"))
cars2 <- melt(cars2, id=c("carname","gears","cyl"),measure.vars=C("mpg","hp"))
cars3 <- melt(cars2, id=c("carname","gears","cyl"),measure.vars=C("mpg","hp"))
cars3 <- melt(cars2, id=c("carname","gears","cyl"),measure.vars=c("mpg","hp"))
cars3 <- melt(cars2, id=c("carname","gears","cyl"),measure.vars=c("mpg","hp"))
cars3 <- melt(cars2, id=c("carname","gear","cyl"),measure.vars=c("mpg","hp"))
head(cars3)
rownames(cars3)
?tapplt
?tapply
install.packages("dyplr")
library(dyplr)
install.packages("plyr")
?ddply
chicago <- readRDS("chicaco.rds")
colnames(cars3)
colnames(cars3)[2]
colnames(cars3])[2] <- "gear2"
colnames(cars3)[2] <- "gear2"
names(cars3)
?merge
# Introduction
setwd("~/GitHub/data-science/c03/W4/correctiosn")
cleanup <- function() {
# check if the UCI data exists. if not create a directory and downloaded
# the file. unzip file into directory.
if(!file.exists("./UCIdata")) {
dir.create("./UCIdata")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = "./UCIdata/dataset.zip", mode = "wb", method = "curl")
unzip ("./UCIdata/dataset.zip", exdir = "./UCIdata")
}
# read files test, train and features data into tables
features <- read.table("./UCIdata/UCI HAR Dataset/features.txt")
test_results <- read.table("./UCIdata/UCI HAR Dataset/test/X_test.txt")
test_activities <- read.table("./UCIdata/UCI HAR Dataset/test/y_test.txt")
test_subjects <- read.table("./UCIdata/UCI HAR Dataset/test/subject_test.txt")
train_results <- read.table("./UCIdata/UCI HAR Dataset/train/X_train.txt")
train_activities <- read.table("./UCIdata/UCI HAR Dataset/train/y_train.txt")
train_subjects <- read.table("./UCIdata/UCI HAR Dataset/train/subject_train.txt")
# combine the dataframes into one dataframe with column names from features.txt
# merge in participant and activity data as additional columns
# test data: 2947 observations
test_results <- cbind(test_results, test_activities)
test_results <- cbind(test_results, test_subjects)
colnames(test_data) <- features[,2]
colnames(test_data)[562:563] <- c('activity', 'subject')
# train data: 7352 observations
train_data <- cbind(train_results, train_activities)
train_data <- cbind(train_data, train_subjects)
colnames(train_data) <- features[,2]
colnames(train_data)[562:563] <- c('activity', 'subject')
# final full dataframe
all_data <- rbind(test_data, train_data)
# transform all column names to lower text for easier grep expressions
colnames(all_data) <- tolower(colnames(all_data))
# create index of column names that contains the words mean,
# std, subject or activity
# then subset the data based on this index
index <- grep("mean|std|subject|activity",
colnames(all_data), value = FALSE)
data_subset <- all_data[,index]
# replace activity numbers with labels
labels <- read.table("./UCIdata/UCI HAR Dataset/activity_labels.txt")
colnames(labels) <- c("activity", "activity_name")
data_subset$activity = labels[match(data_subset$activity, labels$activity), "activity_name"]
# count columns and take 2 off for activity and subject columns
# this is for aggregating all data by the average for each subject per activity
# need to remove activity and subject columns from this aggregate
column_count <- ncol(data_subset)-2
# aggregate the data by average per activty and subject
agg_data <- aggregate(data_subset[,1:column_count], by=list(data_subset$activity, data_subset$subject),  FUN=mean)
# write a table of the tidied dataset
write.table(agg_data, file = "./UCIdata/tidydata.txt", row.names = FALSE)
# return the aggregated data only
return (agg_data)
}
# the file. unzip file into directory.
if(!file.exists("./UCIdata")) {
dir.create("./UCIdata")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = "./UCIdata/dataset.zip", mode = "wb", method = "curl")
unzip ("./UCIdata/dataset.zip", exdir = "./UCIdata")
}
if(!file.exists("./UCIdata")) {
dir.create("./UCIdata")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
download.file(fileUrl, destfile = "./UCIdata/dataset.zip")
unzip ("./UCIdata/dataset.zip", exdir = "./UCIdata")
}
download.file(fileUrl, destfile = "./UCIdata/dataset.zip")
unzip ("./UCIdata/dataset.zip", exdir = "./UCIdata")
features <- read.table("./UCIdata/UCI HAR Dataset/features.txt")
test_results <- read.table("./UCIdata/UCI HAR Dataset/test/X_test.txt")
test_activities <- read.table("./UCIdata/UCI HAR Dataset/test/y_test.txt")
test_subjects <- read.table("./UCIdata/UCI HAR Dataset/test/subject_test.txt")
train_results <- read.table("./UCIdata/UCI HAR Dataset/train/X_train.txt")
train_activities <- read.table("./UCIdata/UCI HAR Dataset/train/y_train.txt")
train_subjects <- read.table("./UCIdata/UCI HAR Dataset/train/subject_train.txt")
?cbind
View(features[, 2])
test_results <- cbind(test_results, test_activities)
test_results <- cbind(test_results, test_subjects)
colnames(test_data) <- features[,2]
colnames(test_data)[562:563] <- c('activity', 'subject')
# train data: 7352 observations
train_data <- cbind(train_results, train_activities)
train_data <- cbind(train_data, train_subjects)
colnames(train_data) <- features[,2]
colnames(train_data)[562:563] <- c('activity', 'subject')
all_data <- rbind(test_data, train_data)
test_results <- cbind(test_results, test_activities)
test_results <- cbind(test_results, test_subjects)
colnames(test_results) <- features[,2]
colnames(test_results)[562:563] <- c('activity', 'subject')
train_data <- cbind(train_results, train_activities)
train_data <- cbind(train_data, train_subjects)
colnames(train_data) <- features[,2]
colnames(train_data)[562:563] <- c('activity', 'subject')
all_data <- rbind(test_results, train_data)
train_data <- cbind(train_results, train_activities)
train_data <- cbind(train_data, train_subjects)
features <- read.table("./UCIdata/UCI HAR Dataset/features.txt")
test_results <- read.table("./UCIdata/UCI HAR Dataset/test/X_test.txt")
test_activities <- read.table("./UCIdata/UCI HAR Dataset/test/y_test.txt")
test_subjects <- read.table("./UCIdata/UCI HAR Dataset/test/subject_test.txt")
View(test_activities)
train_results <- read.table("./UCIdata/UCI HAR Dataset/train/X_train.txt")
train_activities <- read.table("./UCIdata/UCI HAR Dataset/train/y_train.txt")
train_subjects <- read.table("./UCIdata/UCI HAR Dataset/train/subject_train.txt")
test_data <- cbind(test_results, test_activities)
test_data <- cbind(test_data, test_subjects)
colnames(test_data) <- features[,2]
colnames(test_data)[562:563] <- c('activity', 'subject')
train_data <- cbind(train_results, train_activities)
train_data <- cbind(train_data, train_subjects)
colnames(train_data) <- features[,2]
colnames(train_data)[562:563] <- c('activity', 'subject')
all_data <- rbind(test_data, train_data)
# read files test, train and features data into tables
colnames(all_data) <- tolower(colnames(all_data))
index <- grep("mean|std|subject|activity",
colnames(all_data), value = FALSE)
data_subset <- all_data[,index]
?match
labels <- read.table("./UCIdata/UCI HAR Dataset/activity_labels.txt")
colnames(labels) <- c("activity", "activity_name")
data_subset$activity = labels[match(data_subset$activity, labels$activity), "activity_name"]
data_subset$activity
column_count <- ncol(data_subset)-2
gg_data <- aggregate(data_subset[,1:column_count], by=list(data_subset$activity, data_subset$subject),  FUN=mean)
View (agg_data)
View(agg_data)
agg_data <- aggregate(data_subset[,1:column_count], by=list(data_subset$activity, data_subset$subject),  FUN=mean)
View(agg_data)
## 1) Merges the training and the test sets to create one data set
activityLab <- read.table("activity_labels.txt", header= FALSE)
featureLab <- read.table("Features.txt")
activityLab <- read.table("activity_labels.txt", header= FALSE)
featureLab <- read.table("Features.txt")
subjectTrain <- read.table("train/subject_train.txt", header= FALSE)
featureTrain <- read.table("train/X_train.txt", header= FALSE)
activityTrain <- read.table("train/Y_train.txt", header= FALSE)
subjectTest <- read.table("test/subject_test.txt", header= FALSE)
featureTest <- read.table("test/X_test.txt", header= FALSE)
activityTest <- read.table("test/Y_test.txt", header= FALSE)
subject <- rbind(subjectTrain,subjectTest)
feature <- rbind (featureTrain,featureTest)
activity <- rbind(activityTrain,activityTest)
colnames(subject) <- "Subject"
colnames(activity) <- "Activity"
colnames(feature) <- t(featureLab[2])
alldata <- cbind(feature,activity,subject)
MSColumns <- grep(".*Mean.*|.*Std.*", names(alldata), ignore.case=TRUE)
columnsRequire <- c(MSColumns,562,563)
filterData <- alldata[ ,columnsRequire]
filterData$Activity <- as.character(filterData$Activity)
for ( i in 1:6) {
filterData$Activity [filterData$Activity == i] <- as.character(activityLab[i,2])
}
filterData$Activity <- as.factor(filterData$Activity)
names(filterData) <- gsub("^t", "Time" ,names(filterData))
names(filterData) <- gsub("Gyro", "Gyroscope" ,names(filterData))
names(filterData) <- gsub("^f", "Frequency" ,names(filterData))
names(filterData) <- gsub("Acc", "Accelerometer" ,names(filterData))
names(filterData) <- gsub("BodyBody", "Body" ,names(filterData))
names(filterData) <- gsub("Mag", "Magnitude" ,names(filterData))
names(filterData) <- gsub("angle", "Angle", names(filterData))
filterData$Subject <- as.factor(filterData$Subject)
filterData <- data.table(filterData)
library(data.table)
filterData <- data.table(filterData)
tidydata <- aggregate(. ~Subject + Activity, filterData, mean)
tidydata <- tidydata[order(tidydata$Subject,tidydata$Activity),]
write.table(tidydata, file= "Tidy.txt",row.names = FALSE)
View(tidydata)
activities <- read.table("activity_labels.txt", header=FALSE)
features <- read.table("features.txt", header=FALSE)
subject_test <- read.table("test/subject_test.txt", header=FALSE)
x_test <- read.table("test/X_test.txt", header=FALSE)
y_test <- read.table("test/y_test.txt", header=FALSE)
subject_train <- read.table("train/subject_train.txt", header=FALSE)
x_train <- read.table("train/X_train.txt", header=FALSE)
y_train <- read.table("train/y_train.txt", header=FALSE)
names(activities) <- c("activity_id", "Activity")
names(features) <- c("features_id", "features")
names(x_test) <- features$features
names(y_test) <- "activity_id"
names(subject_test) <- "Subject"
names(x_train) <- features$features
names(y_train) <- "activity_id"
names(subject_train) <- "Subject"
test_data <- cbind(subject_test, y_test, x_test)
train_data <- cbind(subject_train, y_train, x_train)
har_data <- rbind(train_data, test_data)
rm(x_test, y_test, subject_test, test_data, x_train, y_train, subject_train, train_data)
setwd("./UCI HAR Dataset") # set working directory
mean_std_features_names_lst <- features$features[grep("mean\\(\\)|std\\(\\)", features$features)]
names_lst <- c("Subject", "activity_id", as.character(mean_std_features_names_lst))
mean_har_data <- har_data[, names_lst]
acti_mean_har_data <- merge(mean_har_data, activities, by="activity_id", all.x=TRUE)
acti_mean_har_data <- acti_mean_har_data[,-c(1)] # delete activity_id
names(acti_mean_har_data) <- gsub("^f", "Frequency", names(acti_mean_har_data))
names(acti_mean_har_data) <- gsub("^t", "Time", names(acti_mean_har_data))
names(acti_mean_har_data) <- gsub("Acc", "Accelerometer", names(acti_mean_har_data))
names(acti_mean_har_data) <- gsub("([Bb]ody[Bb]ody | [Bb]ody)", "Body", names(acti_mean_har_data))
names(acti_mean_har_data) <- gsub("([Gg]ravity)", "Gravity", names(acti_mean_har_data))
names(acti_mean_har_data) <- gsub("[Gg]yro", "Gyroscope", names(acti_mean_har_data))
names(acti_mean_har_data) <- gsub("Mag", "Magnitude", names(acti_mean_har_data))
names(acti_mean_har_data) <- gsub("-mean", "Mean", names(acti_mean_har_data))
names(acti_mean_har_data) <- gsub("-std", "StdDev", names(acti_mean_har_data))
tidy_data <- aggregate(. ~Subject + Activity, acti_mean_har_data, mean)
tidy_data <- tidy_data[order(tidy_data$Subject, tidy_data$Activity),]
View(tidy_data)
require("data.table")
require("dplyr")
library(data.table)
library(plyr)
featureNames <- read.table("UCI HAR Dataset/features.txt")
activityLabels <- read.table("UCI HAR Dataset/activity_labels.txt", header = FALSE)
featureNames <- read.table("UCI HAR Dataset/features.txt")
activityLabels <- read.table("UCI HAR Dataset/activity_labels.txt", header = FALSE)
subjectTrain <- read.table("UCI HAR Dataset/train/subject_train.txt", header = FALSE)
activityTrain <- read.table("UCI HAR Dataset/train/y_train.txt", header = FALSE)
featuresTrain <- read.table("UCI HAR Dataset/train/X_train.txt", header = FALSE)
#Read test data to variables
subjectTest <- read.table("UCI HAR Dataset/test/subject_test.txt", header = FALSE)
activityTest <- read.table("UCI HAR Dataset/test/y_test.txt", header = FALSE)
featuresTest <- read.table("UCI HAR Dataset/test/X_test.txt", header = FALSE)
#Read test data to variables
subjectTest <- read.table("UCI HAR Dataset/test/subject_test.txt", header = FALSE)
activityTest <- read.table("UCI HAR Dataset/test/y_test.txt", header = FALSE)
featuresTest <- read.table("UCI HAR Dataset/test/X_test.txt", header = FALSE)
subjectTest <- read.table("UCI HAR Dataset/test/subject_test.txt", header = FALSE)
activityTest <- read.table("UCI HAR Dataset/test/y_test.txt", header = FALSE)
featuresTest <- read.table("UCI HAR Dataset/test/X_test.txt", header = FALSE)
subjectTrain <- read.table("UCI HAR Dataset/train/subject_train.txt", header = FALSE)
activityTrain <- read.table("UCI HAR Dataset/train/y_train.txt", header = FALSE)
featuresTrain <- read.table("UCI HAR Dataset/train/X_train.txt", header = FALSE)
#Combine results in training data set and test
subject <- rbind(subjectTrain, subjectTest)
activity <- rbind(activityTrain, activityTest)
features <- rbind(featuresTrain, featuresTest)
#Set the names for the columns from the metadata in featureNames
colnames(features) <- t(featureNames[2])
#Merge the data in 'features', 'activity' and 'subject' and the complete data is now stored in 'completeData'
colnames(activity) <- "Activity"
colnames(subject) <- "Subject"
#Create initial dataset
completeData <- cbind(features,activity,subject)
columnsWithMeanSTD <- grep(".*Mean.*|.*Std.*", names(completeData), ignore.case=TRUE)
requiredColumns <- c(columnsWithMeanSTD, 562, 563)
print( "The dimension of initial dataset" )
dim(completeData)
#Create  new variable 'extractedData' with the selected columns in 'requiredColumns' and check the dimension of requiredColumns.
extractedData <- completeData[,requiredColumns]
print ( "The dimension of extracted dataset")
dim(extractedData)
#Change the type of 'activity' field in 'extractedData' from numeric to character. The activity names are taken from metadata activityLabels.
extractedData$Activity <- as.character(extractedData$Activity)
for (i in 1:6){
extractedData$Activity[extractedData$Activity == i] <- as.character(activityLabels[i,2])
}
extractedData$Activity <- as.factor(extractedData$Activity)
#By examining extractedData, we can say that the acronyms should be replaced
names(extractedData)<-gsub("Acc", "Accelerometer", names(extractedData))
names(extractedData)<-gsub("Gyro", "Gyroscope", names(extractedData))
names(extractedData)<-gsub("BodyBody", "Body", names(extractedData))
names(extractedData)<-gsub("Mag", "Magnitude", names(extractedData))
names(extractedData)<-gsub("^t", "Time", names(extractedData))
names(extractedData)<-gsub("^f", "Frequency", names(extractedData))
names(extractedData)<-gsub("tBody", "TimeBody", names(extractedData))
names(extractedData)<-gsub("-mean()", "Mean", names(extractedData), ignore.case = TRUE)
names(extractedData)<-gsub("-std()", "STD", names(extractedData), ignore.case = TRUE)
names(extractedData)<-gsub("-freq()", "Frequency", names(extractedData), ignore.case = TRUE)
names(extractedData)<-gsub("angle", "Angle", names(extractedData))
names(extractedData)<-gsub("gravity", "Gravity", names(extractedData))
#Firstly, set Subject as a factor variable
extractedData$Subject <- as.factor(extractedData$Subject)
extractedData <- data.table(extractedData)
resultData <- aggregate(. ~Subject + Activity, extractedData, mean)
resultData <- resultData[order(resultData$Subject,resultData$Activity),]
View(resultData)
?strsplit
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl)
download.file(fileUrl, "acs.csv")
data <- read.table("acs.csv")
data <- download.file(fileUrl, "acs.csv")
names(data)
data <- read.table("acs.csv")
names(data)
View(data)
data <- read.csv("acs.csv")
View(data)
names(data)
x <- strsplit(names(data), "wgtp")
x[123,]
x <- strsplit(names(data), "wgtp")
x
x[[123]]
names(x)
labels(x)
names(x)
colnames(x)
x[[1]]
names(data)
x[[123]]
x[[118]]
x[[119]]
x[[120]]
x[[123]]
download.file(fileUrl, "gdp")
data <- read.csv("gdp")
names(data)
download.file(fileUrl, "gdp.csv")
data <- read.csv("gdp.csv")
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, "gdp.csv")
data <- read.csv("gdp.csv")
names(data)
View(data)
data <- data[, 5:94]
View(data)
data <- data[, 5:94]
data <- data[, c(5:94)]
data <- data[5:94, ]
## QUESTION 1
data <- data[5:94, ]
View(data)
data <- read.csv("gdp.csv")
View(data)
data <- data[5:194, ]
View(data)
names(data)
?gsub
values <- gsub(",", "", data[, "X.3"])
mean(vales)
mean(values)
mean(values, na.rm = TRUE)
View(data[, "X.3"])
values <- gsub(",", "", as.vector(data[, "X.3"]))
names(values)
x <- as.vector(data[, "X.3"])
class(x)
names(x)
View(x)
class(values)
mean(as.numeric(values))
mean(as.numeric(gsub(",", "", data[, "X.3"])))
mean(as.numeric(gsub(",", "", data[, "X.3"])))
mean(as.numeric(gsub(",", "", data[, "X.3"])))
mean(as.numeric(sub(",", "", data[, "X.3"])))
mean(as.numeric(gsub(",", "", data[, "X.3"])))
mean(as.numeric(gsub(",", "", data[, "X.3"])))
mean(as.numeric(gsub(",", "", data[, "X.3"])))
View(data)
data2 <- read.csv("gdp.csv")
View(data2)
grepl("^United", data[, "X.2"])
table(grepl("^United", data[, "X.2"]))
table(grep("^United", data[, "X.2"]))
grep("^United", data[, "X.2"])
table(grepl("^United", data[, "X.2"]))
table(grepl("^United", data2[, "X.2"]))
table(grepl("^United", data[, "X.2"]))
mean(as.numeric(gsub(",", "", data[, "X.3"])))
## QUESTION 3
table(grepl("^United", data[, "X.2"]))
source('~/.active-rstudio-document', echo=TRUE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileUrl, "gdp2.csv")
data <- read.csv("gdp2.csv")
View(table)
View(data)
data <- data[5:194, ]
View(data)
downlaod.file(fileUrl2, "educ.csv")
download.file(fileUrl2, "educ.csv")
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl2, "educ.csv")
download.file(fileUrl2, "educ.csv")
data2 <- read.csv("educ.csv")
View(data2)
?match
?merge
merged <- merge(data, data2, by.x="X", by.y="CountryCode")
names(merged)
View(mergec)
View(merged)
grep("Fiscal", names(merged))
?grep
?apply
?tapply
?mapply
mapply(nrow(), merged[, 1:189])
mapply(nrow, merged[, 1:189])
mapply(nrow, merged[, c(1:189)])
mapply(nrow, merged[, 1])
?lapply
?mapply
?apply
apply(merged, grepl("June"))
?grepl
apply(merged, grepl("June"), pattern="June")
apply(merged, function(x) grepl("June", x))
?apply
apply(merged, 2, function(x) grepl("June", x))
apply(merged, 2, function(x) talbe(grepl("June", x)))
apply(merged, 2, function(x) table(grepl("June", x)))
?grepl
apply(merged, 2, function(x) sum((grepl("June", x)))
)
apply(merged, 2, function(x) table(sum((grepl("June", x)))))
apply(merged, 2, function(x) View(sum((grepl("June", x)))))
apply(merged, 2, function(x) sum((grepl("June", x))))
apply(merged, 2, function(x) sum((grepl("June", x))))
x <- merged[, "Special.Notes"]
View(x)
?grepl
grepl("Fiscal year end: June", x)
table(grepl("Fiscal year end: June", x))
table(grepl("Fiscal year end: June", merged[, "Special.Notes"]))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(sampleTimes)
class(sampleTimes[1])
class(sampleTimes[2])
class(sampleTimes[1])
?format
View(sampleTimes)
cbind(sampleTimes, weekdays(sampleTimes))
sampleTimes2 <- cbind(sampleTimes, weekdays(sampleTimes))
sampleTimes2
View(sampleTimes2)
class(sampleTimes2[1, 1])
sampleTimes2 <- cbind(as.date(sampleTimes), weekdays(sampleTimes))
sampleTimes2 <- cbind(as.Date(sampleTimes), weekdays(sampleTimes))
View(sampleTimes2)
class(sampleTimes2[1, 1])
sampleTimes2 <- cbind(sampleTimes, format(sampleTimes, %Y), weekdays(sampleTimes))
sampleTimes = index(amzn)
sampleTimes2 <- cbind(sampleTimes, format(sampleTimes, %Y), weekdays(sampleTimes))
?cbind
x <- data.frame("times" = sampleTimes)
names(x)
?apply
?apply
y <- apply(sampleTimes, 1, function(x), format(x, %Y))
y <- apply(sampleTimes, 1, function(x) format(x, %Y))
y <- apply(sampleTimes, 1, function(elt) format(elt, %Y))
View(format(sampleTimes, %Y))
View(format(sampleTimes[1, ], %Y))
View(format(sampleTimes[1], %Y))
samplesTimes[1]
class(samplesTimes[1])
sampleTimes2 <- as.vector(sampleTimes)
View(sampleTimes2)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes[1]
sampleTimes[1]
sampleTimes[2]
data.frame("dates"=sampleTimes)
df <- data.frame("dates"=sampleTimes)
View(df)
class(df[1, 1)
class(df[1, 1]
)
class(df[23, 1])
y <- format(sampleTimes[1], %Y)
y <- format(sampleTimes[1], "%Y")
y
df <- data.frame("dates" = sampleTimes, "years" = format(sampleTimes, "%Y"))
View(df)
class[, 2]
class(df[1, 2])
lavels(df[, 2])
labels(df[, 2])
df <- data.frame("dates" = sampleTimes, "years" = format(sampleTimes, "%Y"), "weekday" = weekdays(sampleTimes))
View(df)
nrow(df[df$years == "2012", ])
View(df)
nrow(df[df$years == "2012" & df$weekday == "lunes", ])
